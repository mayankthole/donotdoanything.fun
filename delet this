<!DOCTYPE html>
<html>
<head>
    <title>DONOT DO ANYTHING</title>
    <link rel="icon" type="image/svg+xml" href="data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'><circle cx='50' cy='50' r='40' fill='%230f0f0f' stroke='white' stroke-width='4'/><text x='50' y='65' font-family='Arial' font-size='50' text-anchor='middle' fill='white'>Â·</text></svg>">

    <style>
        body {
            background-color: #0f0f0f;
            color: #ffffff;
            font-family: 'Arial', sans-serif;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            height: 100vh;
            margin: 0;
            cursor: none;
            overflow: hidden;
            position: relative;
        }
        #title {
            position: absolute;
            top: 20%;
            font-size: 32px;
            font-weight: bold;
            letter-spacing: 4px;
            opacity: 0.9;
            z-index: 2;
        }
        #timer {
            font-size: 120px;
            font-weight: 300;
            margin: 20px;
            opacity: 0.8;
            z-index: 2;
        }
        #message {
            font-size: 28px;
            text-align: center;
            position: absolute;
            bottom: 20%;
            letter-spacing: 2px;
            z-index: 2;
        }
        #restartButton {
            background-color: #ffffff;
            color: #000000;
            border: none;
            padding: 15px 30px;
            border-radius: 30px;
            cursor: pointer;
            margin-top: 20px;
            font-size: 18px;
            display: none;
            transition: transform 0.2s;
            letter-spacing: 1px;
            z-index: 2;
        }
        #restartButton:hover {
            transform: scale(1.05);
        }
        .success {
            color: #4eff4e;
        }
        .failure {
            color: #ff4444;
        }
        #flicker {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: #ff4444;
            opacity: 0;
            z-index: 1;
            pointer-events: none;
        }
        @keyframes flickerAnimation {
            0% { opacity: 0; }
            25% { opacity: 0.2; }
            50% { opacity: 0; }
            75% { opacity: 0.2; }
            100% { opacity: 0; }
        }
        .flicker-active {
            animation: flickerAnimation 0.3s ease-out;
        }

        /* Fireworks Container */
        .fireworks {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: 1;
            pointer-events: none;
            display: none;
        }
        
        /* Firework Particles */
        .particle {
            position: absolute;
            width: 4px;
            height: 4px;
            border-radius: 50%;
            animation: explode 1s ease-out forwards;
        }

        @keyframes explode {
            0% {
                transform: translate(0, 0);
                opacity: 1;
            }
            100% {
                transform: translate(var(--tx), var(--ty));
                opacity: 0;
            }
        }
    </style>
</head>
<body>
    <div id="title">DON'T DO ANYTHING</div>
    <div id="timer">60</div>
    <div id="message"></div>
    <button id="restartButton">TRY AGAIN</button>
    <div id="flicker"></div>
    <div class="fireworks"></div>

    <script>
        let timeLeft = 60;
        let gameOver = false;
        let timer;
        const restartButton = document.getElementById('restartButton');
        const flicker = document.getElementById('flicker');
        const fireworks = document.querySelector('.fireworks');

        function createFirework(x, y) {
            const colors = ['#ff0', '#f0f', '#0ff', '#ff4', '#4ff'];
            const particles = 30;
            
            for (let i = 0; i < particles; i++) {
                const particle = document.createElement('div');
                particle.className = 'particle';
                const angle = (i / particles) * 360;
                const velocity = 100 + Math.random() * 50;
                const tx = Math.cos(angle * Math.PI / 180) * velocity;
                const ty = Math.sin(angle * Math.PI / 180) * velocity;
                
                particle.style.left = x + 'px';
                particle.style.top = y + 'px';
                particle.style.backgroundColor = colors[Math.floor(Math.random() * colors.length)];
                particle.style.setProperty('--tx', tx + 'px');
                particle.style.setProperty('--ty', ty + 'px');
                
                fireworks.appendChild(particle);
                
                // Remove particle after animation
                setTimeout(() => particle.remove(), 1000);
            }
        }

        function celebrateWin() {
            fireworks.style.display = 'block';
            let count = 0;
            const maxFireworks = 10;
            
            const launchFirework = () => {
                if (count < maxFireworks) {
                    const x = Math.random() * window.innerWidth;
                    const y = Math.random() * window.innerHeight;
                    createFirework(x, y);
                    count++;
                    setTimeout(launchFirework, 200);
                }
            };
            
            launchFirework();
        }

        function startGame() {
            timeLeft = 60;
            gameOver = false;
            document.getElementById('timer').textContent = timeLeft;
            document.getElementById('message').textContent = '';
            document.getElementById('message').className = '';
            restartButton.style.display = 'none';
            document.body.style.cursor = 'none';
            flicker.classList.remove('flicker-active');
            fireworks.style.display = 'none';
            fireworks.innerHTML = '';

            document.removeEventListener('mousemove', lose);
            document.removeEventListener('keydown', lose);
            document.removeEventListener('click', lose);

            document.addEventListener('mousemove', lose);
            document.addEventListener('keydown', lose);
            document.addEventListener('click', lose);

            if (timer) {
                clearInterval(timer);
            }

            timer = setInterval(() => {
                timeLeft--;
                document.getElementById('timer').textContent = timeLeft;
                
                if (timeLeft <= 0 && !gameOver) {
                    win();
                }
            }, 1000);
        }

        function lose() {
            if (!gameOver) {
                gameOver = true;
                clearInterval(timer);
                document.getElementById('message').textContent = 'YOU MOVED';
                document.getElementById('message').className = 'failure';
                document.body.style.cursor = 'default';
                
                flicker.classList.remove('flicker-active');
                void flicker.offsetWidth;
                flicker.classList.add('flicker-active');
                
                setTimeout(startGame, 300);
            }
        }

        function win() {
            gameOver = true;
            clearInterval(timer);
            document.getElementById('message').textContent = 'YOU WON';
            document.getElementById('message').className = 'success';
            restartButton.style.display = 'block';
            document.body.style.cursor = 'default';
            celebrateWin();
        }

        restartButton.addEventListener('click', (e) => {
            e.stopPropagation();
            startGame();
        });

        startGame();
    </script>
</body>
</html>
